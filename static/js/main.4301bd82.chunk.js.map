{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/users.js","components/UserSelect/UserSelect.jsx","App.jsx","index.js"],"names":["request","url","options","a","fetch","response","ok","Error","status","statusText","json","result","data","getUserPosts","userId","posts","filter","post","getPostDetails","postId","postDetails","PostsList","selectedUserId","selectPostId","selectedPostId","useState","setPosts","useEffect","loadPosts","postsFromServer","className","map","key","id","title","onClick","type","cn","NewCommentForm","name","placeholder","PostDetails","setPostDetails","loadPostDetails","postDetailsFromServer","console","log","body","getUsers","users","UserSelect","changeHandler","selectedUser","setUsers","loadUsers","usersFromServer","slice","value","onChange","user","App","setSelectedUserId","setSelectedPostId","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4301bd82.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\r\n\r\nexport const request = async(url, options) => {\r\n  const response = await fetch(`${BASE_URL}${url}`, options);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`${response.status} - ${response.statusText}`);\r\n  }\r\n\r\n  const result = await response.json();\r\n\r\n  return result.data;\r\n};\r\n\r\nexport const post = (url, data) => request(\r\n  url,\r\n  {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n    },\r\n    body: JSON.stringify(data),\r\n  },\r\n);\r\n\r\nexport const remove = url => request(\r\n  url,\r\n  {\r\n    method: 'DELETE',\r\n  },\r\n);\r\n","import { request } from './api';\r\n\r\nexport const getUserPosts = async(userId) => {\r\n  const posts = await request('/posts');\r\n\r\n  return (\r\n    userId\r\n      ? posts.filter(post => post.userId === userId)\r\n      : posts\r\n  );\r\n};\r\n\r\nexport const getPostDetails = async(postId) => {\r\n  const postDetails = await request(`/posts/${postId}`);\r\n\r\n  return postDetails;\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getUserPosts } from '../../api/posts';\r\nimport cn from 'classnames';\r\nimport './PostsList.scss';\r\n\r\nexport const PostsList = ({ selectedUserId, selectPostId, selectedPostId }) => {\r\n\r\n  const [posts, setPosts] = useState([])\r\n  \r\n  useEffect(() => {\r\n    loadPosts();\r\n  }, [selectedUserId])\r\n\r\n  const loadPosts = async() => {\r\n    const postsFromServer = await getUserPosts(selectedUserId);\r\n    setPosts(postsFromServer);\r\n  }\r\n\r\n  return (\r\n    <div className=\"PostsList\">\r\n      <h2>Posts:</h2>\r\n\r\n      <ul className=\"PostsList__list\">\r\n        {posts.map( post => (\r\n          <li key={post.id} className=\"PostsList__item\">\r\n            <div>\r\n              <b>[User #{post.userId}]: </b>\r\n              {post.title}\r\n            </div>\r\n            <button\r\n              onClick={()=>selectPostId(post.id)}\r\n              type=\"button\"\r\n              className={cn('PostsList__button button', {\r\n                'button--is-active': post.id === selectedPostId,\r\n              })}\r\n            >\r\n              {post.id === selectedPostId ? 'Close' : 'Open'}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport './NewCommentForm.scss';\r\n\r\nexport const NewCommentForm = () => (\r\n  <form className=\"NewCommentForm\">\r\n    <div className=\"form-field\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Your name\"\r\n        className=\"NewCommentForm__input\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"form-field\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Your email\"\r\n        className=\"NewCommentForm__input\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"form-field\">\r\n      <textarea\r\n        name=\"body\"\r\n        placeholder=\"Type comment here\"\r\n        className=\"NewCommentForm__input\"\r\n      />\r\n    </div>\r\n\r\n    <button\r\n      type=\"submit\"\r\n      className=\"NewCommentForm__submit-button button\"\r\n    >\r\n      Add a comment\r\n    </button>\r\n  </form>\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NewCommentForm } from '../NewCommentForm';\r\nimport { getPostDetails } from '../../api/posts'\r\nimport './PostDetails.scss';\r\nimport { post } from '../../api/api';\r\n\r\nexport const PostDetails = ({ selectedPostId }) => {\r\n  const [postDetails, setPostDetails] = useState({});\r\n  const [comments, setComments] = useState();\r\n\r\n  useEffect(() => {\r\n    loadPostDetails();\r\n\r\n  }, [selectedPostId])\r\n\r\n  const loadPostDetails = async() => {\r\n    const postDetailsFromServer = await getPostDetails(selectedPostId);\r\n\r\n    setPostDetails(postDetailsFromServer);\r\n  };\r\n\r\n  console.log(postDetails);\r\n  return (\r\n    <div className=\"PostDetails\">\r\n      <h2>Post details:</h2>\r\n\r\n      <section className=\"PostDetails__post\">\r\n        <p>{postDetails.body}</p>\r\n      </section>\r\n\r\n      <section className=\"PostDetails__comments\">\r\n        <button type=\"button\" className=\"button\">Hide 2 comments</button>\r\n\r\n        <ul className=\"PostDetails__list\">\r\n          <li className=\"PostDetails__list-item\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"PostDetails__remove-button button\"\r\n            >\r\n              X\r\n            </button>\r\n            <p>My first comment</p>\r\n          </li>\r\n\r\n          <li className=\"PostDetails__list-item\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"PostDetails__remove-button button\"\r\n            >\r\n              X\r\n            </button>\r\n            <p>sad sds dfsadf asdf asdf</p>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n\r\n      <section>\r\n        <div className=\"PostDetails__form-wrapper\">\r\n          <NewCommentForm />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n};\r\n","import { request } from './api';\r\n\r\nexport const getUsers = async(userId) => {\r\n  const users = await request('/users');\r\n\r\n  return users;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getUsers } from '../../api/users';\r\n\r\n\r\nexport const UserSelect = ({ changeHandler, selectedUser }) => {\r\n\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const loadUsers = async() => {\r\n    const usersFromServer = await getUsers();\r\n\r\n    setUsers(usersFromServer.slice(0, 9));\r\n  };\r\n\r\n  return (\r\n    <header className=\"App__header\">\r\n      <label>\r\n        Select a user: &nbsp;\r\n        <select\r\n          value={selectedUser}\r\n          onChange={changeHandler}\r\n          className=\"App__user-selector\"\r\n        >\r\n          <option value=\"0\">All users</option>\r\n          {users.map(user => (\r\n            <option\r\n              value={user.id}\r\n              key={user.id}\r\n            >\r\n              {user.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    </header>\r\n  )\r\n}","import React, { useState, useCallback } from 'react';\r\nimport './App.scss';\r\nimport './styles/general.scss';\r\nimport { PostsList } from './components/PostsList';\r\nimport { PostDetails } from './components/PostDetails';\r\nimport { UserSelect } from './components/UserSelect';\r\n\r\nconst App = () => {\r\n  const [selectedUserId, setSelectedUserId] = useState(0);\r\n  const [selectedPostId, setSelectedPostId] = useState(0);\r\n\r\n  const handleUserSelect = (event) => {\r\n    setSelectedUserId(+event.target.value);\r\n  }\r\n\r\n  const handlePostId = (postId) => {\r\n    setSelectedPostId(postId === selectedPostId ? 0 : postId);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <UserSelect\r\n        changeHandler={handleUserSelect}\r\n        selectedUser={selectedUserId}\r\n      />\r\n      <main className=\"App__main\">\r\n        <div className=\"App__sidebar\">\r\n          <PostsList\r\n            selectedUserId={selectedUserId}\r\n            selectPostId={handlePostId}\r\n            selectedPostId={selectedPostId}\r\n          />\r\n        </div>\r\n        <div className=\"App__content\">\r\n          {!!selectedPostId && <PostDetails selectedPostId={selectedPostId}/>}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}